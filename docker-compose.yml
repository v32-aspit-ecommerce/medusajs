version: "3.8"

services:
  backend:
    image: ${CONTAINER_RELEASE_IMAGE}
    hostname: "`${MEDUSA_DOMAIN}`"
    container_name: medusa-server-default
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/medusa-store"
      REDIS_URL: ${REDIS_URL}
      NODE_ENV: production
      PORT: ${PORT}

    env_file:
      - .env
    ports:
      - "9000:${PORT}"
    volumes: 
      - medusa_data:/app/MEDUSAJS
      - node_modules:/app/MEDUSAJS/node_modules
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:${PORT}/app || exit 1
      interval: 60s
      timeout: 10s
      start_period: 20s
      retries: 5
  postgres:
    image: postgres:16.2-alpine
    restart: always
    expose:
      - "5432"
    # networks:
    #   - medusa_interval
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: medusa-store
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.2.4-alpine
    restart: always
    container_name: redis
    expose: 
      - 6379
    # networks:
    #   - medusa_interval

volumes:
  medusa_data:
  db:
    driver: local
  node_modules: